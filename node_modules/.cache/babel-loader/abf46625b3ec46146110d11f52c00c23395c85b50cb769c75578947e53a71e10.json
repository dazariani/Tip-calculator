{"ast":null,"code":"var _jsxFileName = \"D:\\\\BOOTCAMP SCHOOL\\\\Reactor challenges\\\\Challenge-2\\\\challenge-1\\\\src\\\\TipBoard.js\",\n  _s = $RefreshSig$();\nimport TipPercent from \"./TipPercent\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TipBoard(_ref) {\n  _s();\n  let {\n    percentList,\n    handleClick,\n    customPerc,\n    setCustomPerc,\n    setPercentNum,\n    appActive,\n    setAppActive\n  } = _ref;\n  const [percentActive, setPercentActive] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"tipboard-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select Tip %\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"percent-box\",\n      children: [percentList.map((perc, ind) => {\n        return /*#__PURE__*/_jsxDEV(TipPercent, {\n          appActive: appActive,\n          customPerc: customPerc,\n          active: percentActive === perc,\n          onClick: () => {\n            setPercentActive(perc);\n            handleClick(perc);\n            setPercentNum(perc);\n            setAppActive(true);\n          },\n          perc: perc\n        }, ind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: customPerc,\n        onChange: e => {\n          setCustomPerc(e.target.value);\n          setAppActive(true);\n        },\n        className: \"percent-input\",\n        type: \"text\",\n        placeholder: \"Custom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(TipBoard, \"laOlIXD6Ydwe/B49XsoahgDezBE=\");\n_c = TipBoard;\nexport default TipBoard;\nvar _c;\n$RefreshReg$(_c, \"TipBoard\");","map":{"version":3,"names":["TipPercent","useState","useEffect","jsxDEV","_jsxDEV","TipBoard","_ref","_s","percentList","handleClick","customPerc","setCustomPerc","setPercentNum","appActive","setAppActive","percentActive","setPercentActive","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","perc","ind","active","onClick","value","onChange","e","target","type","placeholder","_c","$RefreshReg$"],"sources":["D:/BOOTCAMP SCHOOL/Reactor challenges/Challenge-2/challenge-1/src/TipBoard.js"],"sourcesContent":["import TipPercent from \"./TipPercent\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction TipBoard({\r\n  percentList,\r\n  handleClick,\r\n  customPerc,\r\n  setCustomPerc,\r\n  setPercentNum,\r\n  appActive,\r\n  setAppActive,\r\n}) {\r\n  const [percentActive, setPercentActive] = useState(\"\");\r\n\r\n  return (\r\n    <section className=\"tipboard-box\">\r\n      <p>Select Tip %</p>\r\n      <div className=\"percent-box\">\r\n        {percentList.map((perc, ind) => {\r\n          return (\r\n            <TipPercent\r\n              appActive={appActive}\r\n              customPerc={customPerc}\r\n              active={percentActive === perc}\r\n              onClick={() => {\r\n                setPercentActive(perc);\r\n                handleClick(perc);\r\n                setPercentNum(perc);\r\n                setAppActive(true);\r\n              }}\r\n              key={ind}\r\n              perc={perc}\r\n            />\r\n          );\r\n        })}\r\n\r\n        <input\r\n          value={customPerc}\r\n          onChange={(e) => {\r\n            setCustomPerc(e.target.value);\r\n            setAppActive(true);\r\n          }}\r\n          className=\"percent-input\"\r\n          type=\"text\"\r\n          placeholder=\"Custom\"\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TipBoard;\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAAC,IAAA,EAQd;EAAAC,EAAA;EAAA,IARe;IAChBC,WAAW;IACXC,WAAW;IACXC,UAAU;IACVC,aAAa;IACbC,aAAa;IACbC,SAAS;IACTC;EACF,CAAC,GAAAR,IAAA;EACC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtD,oBACEG,OAAA;IAASa,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC/Bd,OAAA;MAAAc,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnBlB,OAAA;MAAKa,SAAS,EAAC,aAAa;MAAAC,QAAA,GACzBV,WAAW,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;QAC9B,oBACErB,OAAA,CAACJ,UAAU;UACTa,SAAS,EAAEA,SAAU;UACrBH,UAAU,EAAEA,UAAW;UACvBgB,MAAM,EAAEX,aAAa,KAAKS,IAAK;UAC/BG,OAAO,EAAEA,CAAA,KAAM;YACbX,gBAAgB,CAACQ,IAAI,CAAC;YACtBf,WAAW,CAACe,IAAI,CAAC;YACjBZ,aAAa,CAACY,IAAI,CAAC;YACnBV,YAAY,CAAC,IAAI,CAAC;UACpB,CAAE;UAEFU,IAAI,EAAEA;QAAK,GADNC,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CAAC;MAEN,CAAC,CAAC,eAEFlB,OAAA;QACEwB,KAAK,EAAElB,UAAW;QAClBmB,QAAQ,EAAGC,CAAC,IAAK;UACfnB,aAAa,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAC7Bd,YAAY,CAAC,IAAI,CAAC;QACpB,CAAE;QACFG,SAAS,EAAC,eAAe;QACzBe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC;MAAQ;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACf,EAAA,CA9CQF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAgDjB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}