{"ast":null,"code":"var _jsxFileName = \"D:\\\\BOOTCAMP SCHOOL\\\\Reactor challenges\\\\Challenge-2\\\\challenge-1\\\\src\\\\Input.js\",\n  _s = $RefreshSig$();\nimport InputField from \"./InputField\";\nimport TipBoard from \"./TipBoard\";\nimport dolarImg from \"./images/icon-dollar.svg\";\nimport personImg from \"./images/icon-person.svg\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst percentList = [5, 10, 15, 25, 50];\nfunction Input(_ref) {\n  _s();\n  let {\n    billValue,\n    setBillValue,\n    personValue,\n    setPersonValue,\n    tipAmount,\n    setTipAmount\n  } = _ref;\n  const [percentNum, setPercentNum] = useState(\"\");\n  const handleClick = number => {\n    const tip = Number(billValue) * Number(number) / 100 / Number(personValue);\n    console.log(billValue, personValue, number);\n    if (number) {\n      setPercentNum(number);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(InputField, {\n      setTipAmount: setTipAmount,\n      value: billValue,\n      setValue: setBillValue,\n      title: \"Bill\",\n      image: dolarImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TipBoard, {\n      handleClick: number => handleClick(number),\n      percentList: percentList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      setTipAmount: setTipAmount\n      // tipAmount={tipAmount}\n      ,\n      value: personValue,\n      setValue: setPersonValue,\n      title: \"Number of People\",\n      image: personImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Input, \"ypTwzCg5nBD0rgCGgFxGVJSKinQ=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["InputField","TipBoard","dolarImg","personImg","useState","useEffect","jsxDEV","_jsxDEV","percentList","Input","_ref","_s","billValue","setBillValue","personValue","setPersonValue","tipAmount","setTipAmount","percentNum","setPercentNum","handleClick","number","tip","Number","console","log","children","value","setValue","title","image","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/BOOTCAMP SCHOOL/Reactor challenges/Challenge-2/challenge-1/src/Input.js"],"sourcesContent":["import InputField from \"./InputField\";\r\nimport TipBoard from \"./TipBoard\";\r\n\r\nimport dolarImg from \"./images/icon-dollar.svg\";\r\nimport personImg from \"./images/icon-person.svg\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst percentList = [5, 10, 15, 25, 50];\r\n\r\nfunction Input({\r\n  billValue,\r\n  setBillValue,\r\n  personValue,\r\n  setPersonValue,\r\n  tipAmount,\r\n  setTipAmount,\r\n}) {\r\n  const [percentNum, setPercentNum] = useState(\"\");\r\n\r\n  const handleClick = (number) => {\r\n    const tip =\r\n      (Number(billValue) * Number(number)) / 100 / Number(personValue);\r\n    console.log(billValue, personValue, number);\r\n    if (number) {\r\n      setPercentNum(number);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <InputField\r\n        setTipAmount={setTipAmount}\r\n        value={billValue}\r\n        setValue={setBillValue}\r\n        title=\"Bill\"\r\n        image={dolarImg}\r\n      />\r\n      <TipBoard\r\n        handleClick={(number) => handleClick(number)}\r\n        percentList={percentList}\r\n      />\r\n      <InputField\r\n        setTipAmount={setTipAmount}\r\n        // tipAmount={tipAmount}\r\n        value={personValue}\r\n        setValue={setPersonValue}\r\n        title=\"Number of People\"\r\n        image={personImg}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,SAAS,MAAM,0BAA0B;AAChD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAEvC,SAASC,KAAKA,CAAAC,IAAA,EAOX;EAAAC,EAAA;EAAA,IAPY;IACbC,SAAS;IACTC,YAAY;IACZC,WAAW;IACXC,cAAc;IACdC,SAAS;IACTC;EACF,CAAC,GAAAP,IAAA;EACC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMgB,WAAW,GAAIC,MAAM,IAAK;IAC9B,MAAMC,GAAG,GACNC,MAAM,CAACX,SAAS,CAAC,GAAGW,MAAM,CAACF,MAAM,CAAC,GAAI,GAAG,GAAGE,MAAM,CAACT,WAAW,CAAC;IAClEU,OAAO,CAACC,GAAG,CAACb,SAAS,EAAEE,WAAW,EAAEO,MAAM,CAAC;IAC3C,IAAIA,MAAM,EAAE;MACVF,aAAa,CAACE,MAAM,CAAC;IACvB;EACF,CAAC;EAED,oBACEd,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACP,UAAU;MACTiB,YAAY,EAAEA,YAAa;MAC3BU,KAAK,EAAEf,SAAU;MACjBgB,QAAQ,EAAEf,YAAa;MACvBgB,KAAK,EAAC,MAAM;MACZC,KAAK,EAAE5B;IAAS;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACF3B,OAAA,CAACN,QAAQ;MACPmB,WAAW,EAAGC,MAAM,IAAKD,WAAW,CAACC,MAAM,CAAE;MAC7Cb,WAAW,EAAEA;IAAY;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF3B,OAAA,CAACP,UAAU;MACTiB,YAAY,EAAEA;MACd;MAAA;MACAU,KAAK,EAAEb,WAAY;MACnBc,QAAQ,EAAEb,cAAe;MACzBc,KAAK,EAAC,kBAAkB;MACxBC,KAAK,EAAE3B;IAAU;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;AAACvB,EAAA,CA1CQF,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AA4Cd,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}