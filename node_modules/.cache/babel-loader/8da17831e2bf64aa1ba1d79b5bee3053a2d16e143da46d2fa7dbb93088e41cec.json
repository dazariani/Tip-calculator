{"ast":null,"code":"var _jsxFileName = \"D:\\\\BOOTCAMP SCHOOL\\\\Reactor challenges\\\\Challenge-2\\\\challenge-1\\\\src\\\\Input.js\";\nimport InputField from \"./InputField\";\nimport TipBoard from \"./TipBoard\";\nimport dolarImg from \"./images/icon-dollar.svg\";\nimport personImg from \"./images/icon-person.svg\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst percentList = [5, 10, 15, 25, 50];\nfunction Input(_ref) {\n  let {\n    billValue,\n    setBillValue,\n    personValue,\n    setPersonValue,\n    setTipAmount,\n    setTotalAmount,\n    setPercentNum,\n    customPerc,\n    setCustomPerc,\n    appActive,\n    setAppActive\n  } = _ref;\n  const handleClick = number => {\n    if (number && !customPerc && !isNaN(billValue) && !isNaN(personValue)) {\n      const tip = billValue * number / 100 / personValue;\n      const total = billValue / personValue + tip;\n      if (tip && total) {\n        setTipAmount(tip.toFixed(2));\n        setTotalAmount(total.toFixed(2));\n      }\n      if (tip === Infinity) {\n        setTipAmount(\"0.00\");\n        setTotalAmount(\"0.00\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(InputField, {\n      initValue: \"\",\n      appActive: appActive,\n      setAppActive: setAppActive,\n      setTipAmount: setTipAmount,\n      value: billValue,\n      setValue: setBillValue,\n      title: \"Bill\",\n      image: dolarImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TipBoard, {\n      appActive: appActive,\n      setAppActive: setAppActive,\n      customPerc: customPerc,\n      setCustomPerc: setCustomPerc,\n      setPercentNum: setPercentNum,\n      handleClick: number => handleClick(number),\n      percentList: percentList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      initValue: \"1\",\n      appActive: appActive,\n      setAppActive: setAppActive,\n      type: \"number\",\n      min: \"0\",\n      setTipAmount: setTipAmount,\n      value: personValue,\n      setValue: setPersonValue,\n      title: \"Number of People\",\n      image: personImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["InputField","TipBoard","dolarImg","personImg","useState","useEffect","jsxDEV","_jsxDEV","percentList","Input","_ref","billValue","setBillValue","personValue","setPersonValue","setTipAmount","setTotalAmount","setPercentNum","customPerc","setCustomPerc","appActive","setAppActive","handleClick","number","isNaN","tip","total","toFixed","Infinity","children","initValue","value","setValue","title","image","fileName","_jsxFileName","lineNumber","columnNumber","type","min","_c","$RefreshReg$"],"sources":["D:/BOOTCAMP SCHOOL/Reactor challenges/Challenge-2/challenge-1/src/Input.js"],"sourcesContent":["import InputField from \"./InputField\";\r\nimport TipBoard from \"./TipBoard\";\r\n\r\nimport dolarImg from \"./images/icon-dollar.svg\";\r\nimport personImg from \"./images/icon-person.svg\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst percentList = [5, 10, 15, 25, 50];\r\n\r\nfunction Input({\r\n  billValue,\r\n  setBillValue,\r\n  personValue,\r\n  setPersonValue,\r\n  setTipAmount,\r\n  setTotalAmount,\r\n  setPercentNum,\r\n  customPerc,\r\n  setCustomPerc,\r\n  appActive,\r\n  setAppActive,\r\n}) {\r\n  const handleClick = (number) => {\r\n    if (number && !customPerc && !isNaN(billValue) && !isNaN(personValue)) {\r\n      const tip = (billValue * number) / 100 / personValue;\r\n      const total = billValue / personValue + tip;\r\n      if (tip && total) {\r\n        setTipAmount(tip.toFixed(2));\r\n        setTotalAmount(total.toFixed(2));\r\n      }\r\n      if (tip === Infinity) {\r\n        setTipAmount(\"0.00\");\r\n        setTotalAmount(\"0.00\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <InputField\r\n        initValue=\"\"\r\n        appActive={appActive}\r\n        setAppActive={setAppActive}\r\n        setTipAmount={setTipAmount}\r\n        value={billValue}\r\n        setValue={setBillValue}\r\n        title=\"Bill\"\r\n        image={dolarImg}\r\n      />\r\n      <TipBoard\r\n        appActive={appActive}\r\n        setAppActive={setAppActive}\r\n        customPerc={customPerc}\r\n        setCustomPerc={setCustomPerc}\r\n        setPercentNum={setPercentNum}\r\n        handleClick={(number) => handleClick(number)}\r\n        percentList={percentList}\r\n      />\r\n      <InputField\r\n        initValue=\"1\"\r\n        appActive={appActive}\r\n        setAppActive={setAppActive}\r\n        type=\"number\"\r\n        min=\"0\"\r\n        setTipAmount={setTipAmount}\r\n        value={personValue}\r\n        setValue={setPersonValue}\r\n        title=\"Number of People\"\r\n        image={personImg}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,SAAS,MAAM,0BAA0B;AAChD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAEvC,SAASC,KAAKA,CAAAC,IAAA,EAYX;EAAA,IAZY;IACbC,SAAS;IACTC,YAAY;IACZC,WAAW;IACXC,cAAc;IACdC,YAAY;IACZC,cAAc;IACdC,aAAa;IACbC,UAAU;IACVC,aAAa;IACbC,SAAS;IACTC;EACF,CAAC,GAAAX,IAAA;EACC,MAAMY,WAAW,GAAIC,MAAM,IAAK;IAC9B,IAAIA,MAAM,IAAI,CAACL,UAAU,IAAI,CAACM,KAAK,CAACb,SAAS,CAAC,IAAI,CAACa,KAAK,CAACX,WAAW,CAAC,EAAE;MACrE,MAAMY,GAAG,GAAId,SAAS,GAAGY,MAAM,GAAI,GAAG,GAAGV,WAAW;MACpD,MAAMa,KAAK,GAAGf,SAAS,GAAGE,WAAW,GAAGY,GAAG;MAC3C,IAAIA,GAAG,IAAIC,KAAK,EAAE;QAChBX,YAAY,CAACU,GAAG,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;QAC5BX,cAAc,CAACU,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MAClC;MACA,IAAIF,GAAG,KAAKG,QAAQ,EAAE;QACpBb,YAAY,CAAC,MAAM,CAAC;QACpBC,cAAc,CAAC,MAAM,CAAC;MACxB;IACF;EACF,CAAC;EAED,oBACET,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACP,UAAU;MACT8B,SAAS,EAAC,EAAE;MACZV,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BN,YAAY,EAAEA,YAAa;MAC3BgB,KAAK,EAAEpB,SAAU;MACjBqB,QAAQ,EAAEpB,YAAa;MACvBqB,KAAK,EAAC,MAAM;MACZC,KAAK,EAAEhC;IAAS;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACF/B,OAAA,CAACN,QAAQ;MACPmB,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BH,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA,aAAc;MAC7BF,aAAa,EAAEA,aAAc;MAC7BK,WAAW,EAAGC,MAAM,IAAKD,WAAW,CAACC,MAAM,CAAE;MAC7Cf,WAAW,EAAEA;IAAY;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF/B,OAAA,CAACP,UAAU;MACT8B,SAAS,EAAC,GAAG;MACbV,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BkB,IAAI,EAAC,QAAQ;MACbC,GAAG,EAAC,GAAG;MACPzB,YAAY,EAAEA,YAAa;MAC3BgB,KAAK,EAAElB,WAAY;MACnBmB,QAAQ,EAAElB,cAAe;MACzBmB,KAAK,EAAC,kBAAkB;MACxBC,KAAK,EAAE/B;IAAU;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;AAACG,EAAA,GA/DQhC,KAAK;AAiEd,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}