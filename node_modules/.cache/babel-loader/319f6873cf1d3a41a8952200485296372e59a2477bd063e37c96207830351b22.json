{"ast":null,"code":"var _jsxFileName = \"D:\\\\BOOTCAMP SCHOOL\\\\Reactor challenges\\\\Challenge-2\\\\challenge-1\\\\src\\\\Input.js\";\nimport InputField from \"./InputField\";\nimport TipBoard from \"./TipBoard\";\nimport dolarImg from \"./images/icon-dollar.svg\";\nimport personImg from \"./images/icon-person.svg\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst percentList = [5, 10, 15, 25, 50];\nfunction Input(_ref) {\n  let {\n    billValue,\n    setBillValue,\n    personValue,\n    setPersonValue,\n    setTipAmount,\n    setTotalAmount,\n    setPercentNum,\n    customPerc,\n    setCustomPerc\n  } = _ref;\n  const handleClick = number => {\n    if (number && !customPerc && !isNaN(billValue) && !isNaN(personValue)) {\n      const tip = billValue * number / 100 / personValue;\n      const total = billValue / personValue + tip;\n      if (tip !== Infinity && tip !== NaN) {\n        setTipAmount(tip.toFixed(2));\n        setTotalAmount(total.toFixed(2));\n      }\n    }\n  };\n\n  //   console.log(customPerc);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(InputField, {\n      setTipAmount: setTipAmount,\n      value: billValue,\n      setValue: setBillValue,\n      title: \"Bill\",\n      image: dolarImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TipBoard, {\n      setPercentNum: setPercentNum,\n      handleClick: number => handleClick(number),\n      percentList: percentList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      type: \"number\",\n      min: \"1\",\n      setTipAmount: setTipAmount,\n      value: personValue,\n      setValue: setPersonValue,\n      title: \"Number of People\",\n      image: personImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["InputField","TipBoard","dolarImg","personImg","useState","useEffect","jsxDEV","_jsxDEV","percentList","Input","_ref","billValue","setBillValue","personValue","setPersonValue","setTipAmount","setTotalAmount","setPercentNum","customPerc","setCustomPerc","handleClick","number","isNaN","tip","total","Infinity","NaN","toFixed","children","value","setValue","title","image","fileName","_jsxFileName","lineNumber","columnNumber","type","min","_c","$RefreshReg$"],"sources":["D:/BOOTCAMP SCHOOL/Reactor challenges/Challenge-2/challenge-1/src/Input.js"],"sourcesContent":["import InputField from \"./InputField\";\r\nimport TipBoard from \"./TipBoard\";\r\n\r\nimport dolarImg from \"./images/icon-dollar.svg\";\r\nimport personImg from \"./images/icon-person.svg\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst percentList = [5, 10, 15, 25, 50];\r\n\r\nfunction Input({\r\n  billValue,\r\n  setBillValue,\r\n  personValue,\r\n  setPersonValue,\r\n  setTipAmount,\r\n  setTotalAmount,\r\n  setPercentNum,\r\n  customPerc,\r\n  setCustomPerc,\r\n}) {\r\n  const handleClick = (number) => {\r\n    if (number && !customPerc && !isNaN(billValue) && !isNaN(personValue)) {\r\n      const tip = (billValue * number) / 100 / personValue;\r\n      const total = billValue / personValue + tip;\r\n      if (tip !== Infinity && tip !== NaN) {\r\n        setTipAmount(tip.toFixed(2));\r\n        setTotalAmount(total.toFixed(2));\r\n      }\r\n    }\r\n  };\r\n\r\n  //   console.log(customPerc);\r\n  return (\r\n    <section>\r\n      <InputField\r\n        setTipAmount={setTipAmount}\r\n        value={billValue}\r\n        setValue={setBillValue}\r\n        title=\"Bill\"\r\n        image={dolarImg}\r\n      />\r\n      <TipBoard\r\n        setPercentNum={setPercentNum}\r\n        handleClick={(number) => handleClick(number)}\r\n        percentList={percentList}\r\n      />\r\n      <InputField\r\n        type=\"number\"\r\n        min=\"1\"\r\n        setTipAmount={setTipAmount}\r\n        value={personValue}\r\n        setValue={setPersonValue}\r\n        title=\"Number of People\"\r\n        image={personImg}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,SAAS,MAAM,0BAA0B;AAChD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAEvC,SAASC,KAAKA,CAAAC,IAAA,EAUX;EAAA,IAVY;IACbC,SAAS;IACTC,YAAY;IACZC,WAAW;IACXC,cAAc;IACdC,YAAY;IACZC,cAAc;IACdC,aAAa;IACbC,UAAU;IACVC;EACF,CAAC,GAAAT,IAAA;EACC,MAAMU,WAAW,GAAIC,MAAM,IAAK;IAC9B,IAAIA,MAAM,IAAI,CAACH,UAAU,IAAI,CAACI,KAAK,CAACX,SAAS,CAAC,IAAI,CAACW,KAAK,CAACT,WAAW,CAAC,EAAE;MACrE,MAAMU,GAAG,GAAIZ,SAAS,GAAGU,MAAM,GAAI,GAAG,GAAGR,WAAW;MACpD,MAAMW,KAAK,GAAGb,SAAS,GAAGE,WAAW,GAAGU,GAAG;MAC3C,IAAIA,GAAG,KAAKE,QAAQ,IAAIF,GAAG,KAAKG,GAAG,EAAE;QACnCX,YAAY,CAACQ,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC;QAC5BX,cAAc,CAACQ,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;MAClC;IACF;EACF,CAAC;;EAED;EACA,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACP,UAAU;MACTe,YAAY,EAAEA,YAAa;MAC3Bc,KAAK,EAAElB,SAAU;MACjBmB,QAAQ,EAAElB,YAAa;MACvBmB,KAAK,EAAC,MAAM;MACZC,KAAK,EAAE9B;IAAS;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACF7B,OAAA,CAACN,QAAQ;MACPgB,aAAa,EAAEA,aAAc;MAC7BG,WAAW,EAAGC,MAAM,IAAKD,WAAW,CAACC,MAAM,CAAE;MAC7Cb,WAAW,EAAEA;IAAY;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF7B,OAAA,CAACP,UAAU;MACTqC,IAAI,EAAC,QAAQ;MACbC,GAAG,EAAC,GAAG;MACPvB,YAAY,EAAEA,YAAa;MAC3Bc,KAAK,EAAEhB,WAAY;MACnBiB,QAAQ,EAAEhB,cAAe;MACzBiB,KAAK,EAAC,kBAAkB;MACxBC,KAAK,EAAE7B;IAAU;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;AAACG,EAAA,GAhDQ9B,KAAK;AAkDd,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}